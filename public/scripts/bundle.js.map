{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/calculator.js","webpack:///./src/buttons.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","calculator","Calculator","previousDisplayStatusTextElement","currentDisplayStatusTextElement","sound","Audio","numberButtons","forEach","button","addEventListener","play","addNumber","innerText","updateDisplay","actionButtons","switchAction","equalsButton","calculate","clearButton","clear","changeValueButton","currentDisplayStatus","changeValue","this","isNaN","previousDisplayStatus","counting","undefined","number","includes","toString","count","previousState","parseFloat","currentState","stringNumber","integerNumber","split","decimalNumber","showIntegerNumber","toLocaleString","maximumFractionDigits","showNumber","document","querySelectorAll","querySelector"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict'\r\n\r\nimport Calculator from './calculator'\r\nimport { numberButtons, \r\n        actionButtons, \r\n        clearButton, \r\n        changeValueButton, \r\n        equalsButton, \r\n        previousDisplayStatusTextElement, \r\n        currentDisplayStatusTextElement \r\n    } from './buttons'\r\n\r\n//buttons settings\r\nconst calculator = new Calculator(previousDisplayStatusTextElement,\r\n    currentDisplayStatusTextElement)\r\n\r\n    const sound = new Audio('/sound/click.wav')\r\n//-,+,*./\r\n    numberButtons.forEach(button => {\r\n        button.addEventListener('click', () => {\r\n            sound.play()\r\n            //add what's inside a button\r\n            calculator.addNumber(button.innerText)\r\n            calculator.updateDisplay()\r\n        })\r\n    })\r\n//7894561230\r\n    actionButtons.forEach(button => {\r\n        button.addEventListener('click', () => {\r\n            sound.play()\r\n            //add what's inside a button\r\n            calculator.switchAction(button.innerText)\r\n            calculator.updateDisplay()\r\n        })\r\n    })\r\n//=\r\n    equalsButton.addEventListener('click', button => {\r\n        sound.play()\r\n        calculator.calculate()\r\n        calculator.updateDisplay()\r\n    })\r\n//C\r\n    clearButton.addEventListener('click', button => {\r\n        sound.play()\r\n        calculator.clear()\r\n        calculator.updateDisplay()\r\n    })\r\n//+/-\r\n    changeValueButton.addEventListener('click', button => {\r\n        sound.play()\r\n        if(changeValueButton === true) {\r\n            return currentDisplayStatus = 0\r\n        }\r\n        calculator.changeValue()\r\n        calculator.updateDisplay()\r\n    })\r\n","'use strict'\r\n\r\nexport class Calculator {\r\n    constructor(previousDisplayStatusTextElement, currentDisplayStatusTextElement) {\r\n        this.previousDisplayStatusTextElement = previousDisplayStatusTextElement\r\n        this.currentDisplayStatusTextElement = currentDisplayStatusTextElement\r\n        this.clear()\r\n    }\r\n    //change the value\r\n    changeValue() {\r\n        if (this.currentDisplayStatus < 0) {\r\n            this.currentDisplayStatus = this.currentDisplayStatus * (-1)\r\n        } else if (isNaN(this.currentDisplayStatus)) {\r\n            this.currentDisplayStatus = 0\r\n        } else {\r\n            this.currentDisplayStatus = - this.currentDisplayStatus\r\n        }\r\n    }\r\n    //C button\r\n    clear() {\r\n        this.currentDisplayStatus = ''\r\n        this.previousDisplayStatus = ''\r\n        this.counting = undefined\r\n      }\r\n    //update the display after click any button\r\n    addNumber(number) {\r\n        if (number === '.' && this.currentDisplayStatus.includes('.')) return\r\n        if(this.previousDisplayStatus !== '') {\r\n            // this.calculate()\r\n        \r\n        }\r\n        this.currentDisplayStatus = this.currentDisplayStatus.toString() + number.toString()\r\n    }\r\n    //select the counting\r\n    switchAction(counting) {\r\n        this.counting = counting\r\n        this.previousDisplayStatus = this.currentDisplayStatus \r\n        this.currentDisplayStatus = ''\r\n    }\r\n    //take the value and calculate it showing on the screan\r\n    calculate(){\r\n        let count\r\n        const previousState = parseFloat(this.previousDisplayStatus)\r\n        const currentState = parseFloat(this.currentDisplayStatus)\r\n        if (isNaN(previousState) || isNaN(currentState)) return\r\n        switch (this.counting) {\r\n            case '%':\r\n                count = previousState % currentState\r\n                break\r\n            case '+':\r\n                count = previousState + currentState\r\n                break\r\n            case '-':\r\n                count = previousState - currentState\r\n                break\r\n            case '/':\r\n                count = previousState / currentState\r\n                break\r\n            case 'x':\r\n                count = previousState * currentState\r\n                break\r\n            default:\r\n                return  \r\n        }\r\n        this.currentDisplayStatus = count\r\n        this.counting = undefined\r\n        this.previousDisplayStatus = ''\r\n    }\r\n\r\n    showNumber(number) {\r\n        // return number\r\n         \r\n        const stringNumber = number.toString()\r\n        const integerNumber = parseFloat(stringNumber.split(',')[0])\r\n        const decimalNumber = stringNumber.split(',')[1]\r\n        let showIntegerNumber\r\n\r\n        if(isNaN(integerNumber)) {\r\n            showIntegerNumber = ''\r\n        } else {\r\n            showIntegerNumber = integerNumber.toLocaleString('xx', {\r\n                maximumFractionDigits: 2})\r\n        }\r\n        if(decimalNumber != null) {\r\n            return `${showIntegerNumber}.${decimalNumber}`\r\n        } else {\r\n            return showIntegerNumber\r\n        }\r\n    }\r\n    //update the display\r\n    updateDisplay() {\r\n        // if(this.currentDisplayStatus === '') return\r\n        this.currentDisplayStatusTextElement.innerText = this.showNumber(this.currentDisplayStatus)\r\n        if (this.counting != null) {\r\n            this.previousDisplayStatusTextElement.innerText = \r\n                `${this.showNumber(this.previousDisplayStatus)} ${this.counting}`\r\n        } else {\r\n            this.previousDisplayStatusTextElement.innerText = ''//reset previousStatus\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Calculator","export const numberButtons = document.querySelectorAll('[data-buttons-numbers]')\r\nexport const actionButtons = document.querySelectorAll('[data-buttons-actions]')\r\nexport const clearButton = document.querySelector('[data-clear]')\r\nexport const changeValueButton = document.querySelector('[data-change-value]')\r\nexport const equalsButton = document.querySelector('[data-equals]')\r\nexport const previousDisplayStatusTextElement = document.querySelector('[data-previous-status]')\r\nexport const currentDisplayStatusTextElement = document.querySelector('[data-current-status]')\r\n"],"sourceRoot":""}